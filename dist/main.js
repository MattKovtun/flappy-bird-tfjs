!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(i,r,function(e){return t[e]}.bind(null,r));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);var i={world:{height:400,width:400,refreshRate:13,blocksFrequency:200,shift:3,heightRandomness:50,widthRandomness:30,nextBlockX:125},bird:{width:20,height:20,jumpSpeed:11,fallingSpeed:3,jumpLength:8,startX:35,startY:200},block:{width:78,height:140,blockInitialX:320,blockInitialY:0},agent:{saveStates:5e3,explorationRate:.005,explorationRateDecay:.35,batch:2e3,learningRate:.01,epochs:3,numberOfEpisodesBeforeRetrain:3,rewards:{alive:10,dead:-300}},img:"https://i.ibb.co/Q9yv5Jk/flappy-bird-set.png"};const r=t=>Math.floor(Math.random()*Math.floor(t)),h=(t,e)=>t.x+t.width>=e.x&&t.x+t.width<=e.x+e.width&&(t.y+t.height>=e.y&&t.y+t.height<=e.y+e.height||t.y>=e.y&&t.y<=e.y+e.height);var o=class{constructor(){this.img=new Image,this.img.src=i.img;const t=r(i.world.heightRandomness)-.5*i.world.heightRandomness;this.upperBlock={height:i.block.height-t,width:i.block.width,x:i.block.blockInitialX,y:i.block.blockInitialY},this.lowerBlock={y:i.world.height-i.block.height-t,height:i.block.height+t,width:i.block.width,x:i.block.blockInitialX}}collision(t){return h(t,this.upperBlock)||h(t,this.lowerBlock)}shiftBlocks(t){return this.lowerBlock.x-=t,this.upperBlock.x-=t,this}render(t){return t.beginPath(),t.drawImage(this.img,432+this.lowerBlock.width,108,this.lowerBlock.width,this.lowerBlock.height,this.lowerBlock.x,this.lowerBlock.y,this.lowerBlock.width,this.lowerBlock.height),t.drawImage(this.img,432,588-this.upperBlock.height,this.upperBlock.width,this.upperBlock.height,this.upperBlock.x,this.upperBlock.y,this.upperBlock.width,this.upperBlock.height),this}};var n=class{constructor(){this.renderFrame=0,this.y=i.bird.startY,this.x=i.bird.startX,this.height=i.bird.height,this.width=i.bird.width,this.fallingSpeed=i.bird.fallingSpeed,this.jumpSpeed=i.bird.jumpSpeed,this.jumpLength=i.bird.jumpLength,this.color=i.bird.color,this.jump=new Array(this.jumpLength).fill(-this.jumpSpeed),this.jump.push(0),this.img=new Image,this.img.src=i.img,this.birdOnImg=[51,36]}render(t){return this.renderFrame++,t.drawImage(this.img,432,Math.floor(this.renderFrame%9/3)*this.birdOnImg[1],...this.birdOnImg,this.x,this.y,this.height,this.width),this}};var a=class{constructor(t,e){this.ctx=e,this.canvas=t,this.birdJump=!1,this.startNewGame()}startNewGame(){return this.bird=new n,this.blocks=[new o],this.currentState=this.bird.jump.length-1,this.score=0,this.tick=0,this}gameIsOver(){if(this.bird.y+this.bird.height>=i.world.height)return!0;if(this.bird.y<=0)return!0;for(let t=0;t<this.blocks.length;++t)if(this.blocks[t].collision(this.bird))return!0;return!1}performAction(t){t&&(this.currentState=0)}moveBlocks(){this.spawnBlock(),this.blocks=this.blocks.filter(t=>{const e=t.upperBlock.x>=-i.block.width;return e||this.score++,e}).map(t=>t.shiftBlocks(i.world.shift))}spawnBlock(){this.blocks[0].lowerBlock.x<=i.world.nextBlockX+r(i.world.widthRandomness)&&this.blocks.length<2&&this.blocks.push(new o)}moveBird(){this.bird.y+=this.bird.jump[this.currentState],this.bird.y+=this.bird.fallingSpeed,this.birdJump=this.currentState!==this.bird.jump.length-1,this.currentState=Math.min(this.bird.jump.length-1,this.currentState+1)}getFrame(){this.moveBird(),this.moveBlocks();const t=this.gameIsOver();return this.tick++,{bird:this.bird,blocks:this.blocks,gameIsOver:t,score:this.score,birdJump:this.birdJump}}renderFrame(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bird.render(this.ctx),this.blocks.map(t=>t.render(this.ctx))}};var l=class{constructor(t){this.inputShapeLength=3,this.history=[],this.stateIndex=0,this.losses=[],this.explorationRate=i.agent.explorationRate,this.saveStates=i.agent.saveStates,this.rewards=i.agent.rewards,this.batch=i.agent.batch,this.epochs=i.agent.epochs,this.numberOfEpisodesBeforeRetrain=i.agent.numberOfEpisodesBeforeRetrain,this.initModel()}initModel(){this.model=tf.sequential(),this.model.add(tf.layers.dense({units:4,inputShape:[this.inputShapeLength]})),this.model.add(tf.layers.dense({units:2})),this.model.compile({loss:"meanSquaredError",optimizer:tf.train.adam(i.agent.learningRate)})}modelPredict(t){const e=this.model.predict(tf.tensor2d(t,[1,this.inputShapeLength]));return{action:e.argMax(1).dataSync()[0],predictedReward:e.max(1).dataSync()[0]}}async retrainModel(t){if(this.history.length>=this.saveStates&&(this.history=this.history.slice(Math.floor(this.history.length/2))),t%this.numberOfEpisodesBeforeRetrain!=0)return;let e=[],s=[];for(let t=Math.min(this.batch,this.history.length-1);t>=0;--t){const i=this.history[this.history.length-1-t];e.push(i.state);let r=[0,0];r[i.action]=i.reward,s.push(r)}e=tf.tensor2d(e,[e.length,this.inputShapeLength]),s=tf.tensor2d(s,[s.length,2]);const i=await this.model.fit(e,s,{epochs:this.epochs});this.losses.push(i.history.loss[0])}calculateReward(t){const e=this.formModelInputs(t.bird,t.blocks);return e[0]<e[2]&&e[1]>e[2]?100:-100}formModelInputs(t,e){let s;for(let i of e)if(i.lowerBlock.x+i.lowerBlock.width>=t.x){s=i;break}return[s.upperBlock.y+s.upperBlock.height,s.lowerBlock.y,t.y]}act(t){this.stateIndex++;const{bird:e,blocks:s,gameIsOver:i}=t,r=this.calculateReward(t),h=this.formModelInputs(e,s),{action:o,predictedReward:n}=this.getActionReward(h,t.score);return this.updatePrevState(i,r,h),i||this.history.push({state:h,predictedReward:n,action:o,reward:-1,gameIsOver:-1,nextState:-1}),o}getActionReward(t,e){return e<=10&&Math.random()<=this.explorationRate?{action:r(2),predictedReward:-1}:this.modelPredict(t)}updatePrevState(t,e,s){if(!this.history.length)return;let i=this.history.length-1;this.history[i].reward=e,this.history[i].nextState=s,this.history[i].gameIsOver=t}};var c=class{constructor(){this.information=document.getElementById("information"),this.lossInfo=document.getElementById("losses"),this.ctx=document.getElementById("losses-chart").getContext("2d"),this.chart=this.setupLossesChart()}setupLossesChart(){return new Chart(this.ctx,{type:"line",data:{datasets:[{label:"Last 10 losses",data:[],fill:!1,borderColor:"rgb(75, 192, 192)"}]},options:{responsive:!0,maintainAspectRatio:!1},yAxes:[{ticks:{beginAtZero:!0}}]})}renderInformation(t,e){const s=t.length,i=t.reduce((t,e)=>t+e,0),r=i/s;this.information.innerHTML=`\n                        <span>Avg Episode Length: ${r}</span>\n                        <span>Number of episodes: ${s}</span>\n                        <span>Current state: ${i}</span>\n                        <span>Exploration rate: ${e}</span>`}renderLosses(t){this.lossInfo.innerHTML="";const e=document.createElement("div");t.map(t=>{const s=document.createElement("span");s.innerHTML=`Loss: ${t}`,e.appendChild(s)}),this.lossInfo.appendChild(e),this.lossInfo.scrollTop=this.lossInfo.scrollHeight,this.chart.data.datasets[0].data=t.slice(-10),this.chart.data.labels=[...Array(10).keys()],this.chart.update()}renderScore(t){document.getElementById("score").innerHTML=`Score: ${t}`}};const d=new class{constructor(){this.info=new c,this.canvas=document.getElementById("entry-point"),this.ctx=this.canvas.getContext("2d"),this.game=new a(this.canvas,this.ctx),this.agent=new l(i.agent.saveStates),this.episodes=[],this.playGame=!0,this.scores=[],this.refreshRate=i.world.refreshRate}async playOneEpisode(t){for(this.game.startNewGame();;){const e=this.game.getFrame();this.game.renderFrame();const{score:s,gameIsOver:i,birdJump:r}=e;let h;if(this.info.renderScore(s),r||(h=this.agent.act(e),this.game.performAction(h)),i){this.episodes.push(this.game.tick),this.scores.push(s);break}t&&await new Promise((t,e)=>setTimeout(t,this.refreshRate))}}async graphicMode(t){await this.playOneEpisode(t),await this.agent.retrainModel(this.episodes.length),this.info.renderLosses(this.agent.losses),this.info.renderInformation(this.episodes,this.agent.explorationRate)}};let p=0,u=!0;(async t=>{for(;t.playGame;)u=!(p>0),await t.graphicMode(u),p--})(d),document.addEventListener("keypress",t=>{32===t.keyCode&&d.game.performAction(1)}),document.addEventListener("keyup",t=>{27===t.keyCode&&gg}),document.getElementById("buttons").addEventListener("click",t=>{switch(t.target.id){case"buttonskip-1":p=5;break;case"buttonskip-2":p=10;break;case"buttonskip-3":p=20}})}]);