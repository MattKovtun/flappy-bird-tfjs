!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(i,r,function(e){return t[e]}.bind(null,r));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);var i={world:{height:400,width:400,speed:1,blocksFrequency:200,ms:2},bird:{width:15,height:15,color:"red",jumpSpeed:7,fallingSpeed:6,jumpLength:25},block:{width:85,height:105,color:"green"},agent:{retrainEpisodes:10,saveStates:2e3,explorationRate:.001,explorationRateDecay:.35,batch:1e3}};const r=t=>Math.floor(Math.random()*Math.floor(t)),o=(t,e)=>Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)),n=(t,e)=>t.y>=e.y&&t.y<=e.y+e.height&&t.x>=e.x&&t.x<=e.x+e.width,h=(t,e)=>{e.innerHTML="";const s=document.createElement("div");t.map(t=>{const e=document.createElement("span");e.innerHTML=`Loss: ${t}`,s.appendChild(e)}),e.appendChild(s),e.scrollTop=e.scrollHeight},a=(t,e,s)=>{const i=t.length,r=t.reduce((t,e)=>t+e,0),o=r/i;s.innerHTML=`\n                    <span>Avg Episode Length: ${o}</span>\n                    <span>Number of episodes: ${i}</span>\n                    <span>Current state: ${r}</span>\n                    <span>Exploration rate: ${e}</span>`},l=(t,e)=>e.innerHTML=`Score: ${t}`;var c=class{constructor(){this.upperBlock={y:0,height:i.block.height,width:i.block.width,x:320},this.lowerBlock={y:i.world.height-i.block.height,height:i.block.height,width:i.block.width,x:320}}collision(t){return n(t,this.upperBlock)||n(t,this.lowerBlock)}shiftBlocks(){return this.lowerBlock.x-=i.world.ms,this.upperBlock.x-=i.world.ms,this}render(t){return t.beginPath(),t.fillStyle=i.block.color,t.fillRect(this.upperBlock.x,this.upperBlock.y,this.upperBlock.width,this.upperBlock.height),t.fillRect(this.lowerBlock.x,this.lowerBlock.y,this.lowerBlock.width,this.lowerBlock.height),this}};var d=class{constructor(){this.y=200,this.x=35,this.jump=new Array(i.bird.jumpLength).fill(-i.bird.jumpSpeed);for(let t=0;t<10;++t)this.jump.push(-i.bird.fallingSpeed);this.jump.push(0)}render(t){return t.beginPath(),t.fillStyle=i.bird.color,t.arc(this.x,this.y,i.bird.height,0,2*Math.PI),t.fill(),this}};var p=class{constructor(t,e){this.ctx=e,this.canvas=t,this.score=0,this.birdJump=!1}startNewGame(){return this.bird=(new d).render(this.ctx),this.blocks=[(new c).render(this.ctx)],this.currentState=this.bird.jump.length-1,this.ticks=0,this.score=0,this}gameIsOver(){if(this.bird.y>=i.world.height)return!0;if(this.bird.y<=0)return!0;for(let t=0;t<this.blocks.length;++t)if(this.blocks[t].collision(this.bird))return!0;return!1}performAction(t){t&&(this.currentState=0)}moveBlocks(){this.blocks[0].lowerBlock.x<=150&&this.blocks.length<2&&this.blocks.push(new c),this.blocks=this.blocks.filter(t=>{const e=t.upperBlock.x>=0-i.block.width;return e||this.score++,e}).map(t=>t.shiftBlocks())}moveBird(){this.bird.y+=this.bird.jump[this.currentState],this.bird.y+=i.bird.fallingSpeed,this.currentState=Math.min(this.bird.jump.length-1,this.currentState+1),this.birdJump=this.currentState!==this.bird.jump.length-1}getFrame(){this.moveBird(),this.moveBlocks(),this.ticks++;const t=this.gameIsOver();return{bird:this.bird,blocks:this.blocks,gameIsOver:t,ticks:this.ticks,score:this.score,birdJump:this.birdJump}}renderFrame(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bird.render(this.ctx),this.blocks.map(t=>t.render(this.ctx))}};var u=class{constructor(t){this.initModel(),this.history=[],this.saveStates=t,this.state=0,this.losses=[],this.explorationRate=i.agent.explorationRate,this.rewards=[10,-300],this.batch=i.agent.batch}initModel(){this.model=tf.sequential(),this.model.add(tf.layers.dense({units:4,inputShape:[2]})),this.model.add(tf.layers.dense({units:4})),this.model.add(tf.layers.dense({units:2})),this.model.compile({loss:"meanSquaredError",optimizer:tf.train.adam(.1)})}modelPredict(t){const e=this.model.predict(tf.tensor2d(t,[1,2]));return{action:e.argMax(1).dataSync()[0],predictedReward:e.max(1).dataSync()[0]}}async retrainModel(){this.history.length>=2*this.saveStates&&(this.history=this.history.slice(this.history.length-this.saveStates));let t=[],e=[];for(let s=Math.min(this.batch,this.history.length-1);s>=0;--s){const i=this.history[this.history.length-1-s];t.push(i.state);let r=[0,0];r[i.action]=i.reward,e.push(r)}t=tf.tensor2d(t,[t.length,2]),e=tf.tensor2d(e,[e.length,2]);const s=await this.model.fit(t,e,{epochs:1});console.log("Loss after Epoch  : "+s.history.loss[0]),this.losses.push(s.history.loss[0])}calculateReward(t){let e=this.rewards[0];return t&&(e=this.rewards[1]),e}formModelInputs(t,e){let s;for(let i of e)if(i.lowerBlock.x+i.lowerBlock.width>=t.x){s=i;break}return[o(t,{x:t.x,y:s.lowerBlock.y}),o(t,{x:s.lowerBlock.x+s.lowerBlock.width,y:t.y})]}act(t){this.state++;const{bird:e,blocks:s,ticks:i,gameIsOver:r}=t,o=this.calculateReward(r),n=this.formModelInputs(e,s),h=n,{action:a,predictedReward:l}=this.getActionReward(n);return r||this.history.push({state:h,predictedReward:l,action:a,reward:-1,gameIsOver:-1,nextState:-1}),this.updatePrevState(r,o,h,i),a}getActionReward(t){return this.randomMove()?{action:r(2),predictedReward:-1}:this.modelPredict(t)}randomMove(){return Math.random()<=this.explorationRate}updatePrevState(t,e,s,i){if(this.state<=1)return;if(1===i)return;let r=this.history.length-2;t&&(r=this.history.length-1),this.history[r].reward=e,this.history[r].nextState=s,this.history[r].gameIsOver=t}};const m=new class{constructor(){this.canvas=document.getElementById("entry-point"),this.ctx=this.canvas.getContext("2d"),this.game=new p(this.canvas,this.ctx).startNewGame(),this.agent=new u(i.agent.saveStates),this.movementIndicator=document.getElementById("action"),this.lossInfo=document.getElementById("losses"),this.information=document.getElementById("information"),this.scoreInfo=document.getElementById("score"),this.episodes=[],this.playGame=!0,this.mode=1}async graphicMode(){const t=this.game.getFrame();this.game.renderFrame();const{score:e,gameIsOver:s,ticks:r,birdJump:o}=t;let n=0;o&&!s||(n=this.agent.act(t),this.game.performAction(n)),s&&(this.episodes.push(r),this.game.startNewGame(),this.episodes.length,i.agent.retrainEpisodes),this.agent.state>100&&s&&await this.agent.retrainModel(),this.renderWorldVerbose(e,n,s),await new Promise((t,e)=>setTimeout(t,i.world.speed))}renderWorldVerbose(t,e,s){this.movementIndicator.classList=e?["arrow arrow_up"]:["arrow arrow_down"],s&&this.episodes.length%i.agent.retrainEpisodes==0&&(h(this.agent.losses,this.lossInfo),a(this.episodes,this.agent.explorationRate,this.information)),l(t,this.scoreInfo)}};(async t=>{for(;t.playGame;)await t.graphicMode(t.mode)})(m),document.addEventListener("keypress",t=>{32===t.keyCode&&m.game.performAction(1)})}]);