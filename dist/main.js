!function(t){var e={};function r(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(i,s,function(e){return t[e]}.bind(null,s));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);var i={world:{height:400,width:400,speed:10},bird:{width:15,height:15,color:"red",jumpSpeed:7,fallingSpeed:3,jumpLength:25},block:{width:85,height:105,color:"green"}};var s=class{constructor(){this.x=320,this.upperHeight=i.block.height,this.lowerHeight=i.block.height,this.width=i.block.width}render(t){return t.beginPath(),t.fillStyle=i.block.color,t.fillRect(this.x,0,this.width,this.upperHeight),t.fillRect(this.x,i.world.height-this.lowerHeight,this.width,this.lowerHeight),this}};var n=class{constructor(){this.y=200,this.x=35,this.jump=new Array(i.bird.jumpLength).fill(-i.bird.jumpSpeed);for(let t=0;t<10;++t)this.jump.push(-i.bird.fallingSpeed);this.jump.push(0)}render(t){return t.beginPath(),t.fillStyle=i.bird.color,t.arc(this.x,this.y,i.bird.height,0,2*Math.PI),t.fill(),this}};var h=class{constructor(t,e){this.ctx=e,this.canvas=t}startNewGame(){this.bird=(new n).render(this.ctx),this.blocks=[(new s).render(this.ctx)],this.current_state=this.bird.jump.length-1,this.ticks=1}gameIsOver(){this.bird.y>=i.world.height||this.bird.y;for(let t=0;t<this.blocks.length;++t);}nextFrame(){this.ticks%200==0&&this.blocks.push(new s),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bird.render(this.ctx),this.bird.y+=this.bird.jump[this.current_state],this.bird.y+=i.bird.fallingSpeed,this.current_state=Math.min(this.bird.jump.length-1,this.current_state+1),this.blocks.filter(t=>t.x>=0-i.block.width).map(t=>{t.render(this.ctx),t.x--}),this.ticks++}};const o=document.getElementById("entry-point"),l=new h(o,o.getContext("2d"));l.startNewGame(),setInterval(l.nextFrame.bind(l),i.world.speed),document.body.addEventListener("keypress",t=>{32===t.charCode&&(l.current_state=0),0===t.charCode&&l.startNewGame()})}]);